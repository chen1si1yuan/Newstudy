/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum AirCleanerStatus implements org.apache.thrift.TEnum {
  UNKNOWN(0),
  TURN_ON(1),
  TURN_OFF(2),
  MODE_MUTE(3),
  MODE_AUTO(4),
  MODE_SLEEP(5),
  HI_WIND(6),
  MID_WIND(7),
  LOW_WIND(8),
  NET_IONIC_ON(9),
  NET_IONIC_OFF(10),
  CHILD_LOCK_ON(11),
  CHILD_LOCK_OFF(12),
  LAMP_UP(13),
  LAMP_DOWN(14),
  AIR_QUALITY(15);

  private final int value;

  private AirCleanerStatus(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static AirCleanerStatus findByValue(int value) { 
    switch (value) {
      case 0:
        return UNKNOWN;
      case 1:
        return TURN_ON;
      case 2:
        return TURN_OFF;
      case 3:
        return MODE_MUTE;
      case 4:
        return MODE_AUTO;
      case 5:
        return MODE_SLEEP;
      case 6:
        return HI_WIND;
      case 7:
        return MID_WIND;
      case 8:
        return LOW_WIND;
      case 9:
        return NET_IONIC_ON;
      case 10:
        return NET_IONIC_OFF;
      case 11:
        return CHILD_LOCK_ON;
      case 12:
        return CHILD_LOCK_OFF;
      case 13:
        return LAMP_UP;
      case 14:
        return LAMP_DOWN;
      case 15:
        return AIR_QUALITY;
      default:
        return null;
    }
  }
}
